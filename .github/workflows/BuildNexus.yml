name: BuildNexus

on:
  [push, pull_request]

jobs:
  build_nexus:
    name: Build Nexus
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-22.04', 'ubuntu-22.04-arm', 'macos-13', 'macos-latest', 'windows-latest']

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      if: ${{ matrix.os != 'macos-latest' && matrix.os != 'ubuntu-22.04-arm' }}
      with:
        cache: true
        version: '5.15.2'
    - name: Setup Env variables
      shell: bash
      id: envs
      run: |
        echo "name=VCINSTALLDIR::C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC" >> $GITHUB_ENV
        ARCH=$(uname -m)
        echo "arch=$ARCH" >> $GITHUB_OUTPUT
    - name: Clone VCG
      shell: bash
      run: |
        cd ..
        git clone --single-branch --branch devel https://github.com/cnr-isti-vclab/vcglib
    - name: Install dependencies Linux
      if: ${{ runner.os == 'Linux' }}
      run: |
       sudo apt-get install -y mesa-common-dev libglu1-mesa-dev libglew-dev ninja-build
    - name: Install dependencies Linux arm
      if: ${{ matrix.os == 'ubuntu-22.04-arm' }}
      run: |
        sudo apt-get install -y qtbase5-dev qt5-qmake
    - name: Install dependencies macOS arm
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew install qt@5
        echo Qt5_DIR=$(brew --prefix qt@5) >> $GITHUB_ENV
        echo $(brew --prefix qt@5)/bin >> $GITHUB_PATH
    - name: Configure and Build
      shell: bash
      run: |
        mkdir build
        mkdir install
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release -GNinja -DCMAKE_INSTALL_PREFIX=../install ..
        ninja
        ninja install
    - name: Deploy
      shell: bash
      if: ${{ runner.os == 'macOS' }}
      run: |
        cd install
        macdeployqt nxsview.app -executable=nxsview.app/Contents/MacOS/nxsbuild -executable=nxsview.app/Contents/MacOS/nxscompress -executable=nxsview.app/Contents/MacOS/nxsedit
        rm -r bin
        rm -r lib
        tar -cvzf nxsview-macos-${{ steps.envs.outputs.arch }}.tar.gz *
    - name: Deploy
      shell: bash
      if: ${{ runner.os == 'Windows' }}
      run: |
        cd install/bin
        windeployqt nxsview.exe
        cd ..
        mv bin nexus_portable-${{ steps.envs.outputs.arch }}
    - name: Upload nxsview Portable
      uses: actions/upload-artifact@v4
      if: ${{ runner.os == 'macOS' }}
      with:
        name: nxsview_macos_portable_${{ steps.envs.outputs.arch }}
        path: install/nxsview-macos-${{ steps.envs.outputs.arch }}.tar.gz
    - name: Uploading Nexus Portable
      uses: actions/upload-artifact@v4
      if: ${{ runner.os == 'Windows' }}
      with:
        name: nexus_windows_portable_${{ steps.envs.outputs.arch }}
        path: install/nexus_portable-${{ steps.envs.outputs.arch }}